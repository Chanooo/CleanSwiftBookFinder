//
//  BookListWorkerTests.swift
//  BookFinder
//
//  Created by CNOO on 2021/09/29.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import BookFinder
import XCTest

class BookListWorkerTests: XCTestCase
{
    // MARK: Subject under test
    
    var sut: BookListWorker!
    
    // MARK: Test lifecycle
    
    override func setUp()
    {
        super.setUp()
        setupBookListWorker()
    }
    
    override func tearDown()
    {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupBookListWorker()
    {
        sut = BookListWorker()
    }
    
    // MARK: Test doubles
    
    class BookListBusinessLogicSpy: BookListBusinessLogic
    {
        var books: [Book]?
        
        // MARK: Method call expectations
        
        var fetchBooksCalled = false
        
        // MARK: Spied methods
        
        func fetchBooks(request: BookList.FetchBooks.Request) {
            fetchBooksCalled = true
        }
    }
    
    // MARK: Tests
    
    func testFetchBooksShouldAskBookListInteractorToUpdateResponse()
    {
        // Given
        let request = BookList.FetchBooks.Request(queryText: "Swift", startIndex: 0, maxResult: 10)

        // When
        var expResult: BookList.FetchBooks.Response?
        let exp = expectation(description: "Wait for fetched books result")
        sut.fetchBooks(request: request) { result in
            switch result {
            case .success(let res):
                expResult = res
            case .failure(_):
                break
            }
            exp.fulfill()
        }
        
        // Then
        waitForExpectations(timeout: 10.0)
        XCTAssertTrue(expResult?.items?.count ?? 0 > 0, "BookListWorker could not get a right response from google Books API")
    }
}
