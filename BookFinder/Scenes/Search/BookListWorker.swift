//
//  BookListWorker.swift
//  BookFinder
//
//  Created by CNOO on 2021/09/27.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class BookListWorker
{
    private let baseUrl = "https://www.googleapis.com/books/v1"
    
    func fetchBooks(request: BookList.FetchBooks.Request, completionHandler:  @escaping (Result<BookList.FetchBooks.Response, Error>) -> Void)
    {
        let path = "/volumes"
        var params: [String : Any] = [:]
        if request.queryText.count > 0 {
            params["q"] = request.queryText
            params["startIndex"] = request.startIndex
        }
        
        DispatchQueue.global(qos: .background).async {
            let queryParams = params.map { k, v in "\(k)=\(v)" }.joined(separator: "&")

            var fullPath = path.hasPrefix("http") ? path : self.baseUrl + path
            
            if !queryParams.isEmpty {
                fullPath += "?" + queryParams
            }

            do {
                if let encoded = fullPath.addingPercentEncoding(withAllowedCharacters: .urlQueryAllowed),
                   let url = URL(string: encoded) {
                    let json = try String(contentsOf: url, encoding: .utf8)
//                    print(json)
                    let data = json.data(using: .utf8)!
                    let response = try JSONDecoder().decode(BookList.FetchBooks.Response.self, from: data)
                    completionHandler(Result.success(response))
                } else {
                    printError("url is nil")
                }
            } catch {
                printError(error.localizedDescription)
                completionHandler(Result.failure(error))
            }
        }
        
    }
    
}




